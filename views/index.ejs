<!DOCTYPE html>
<html>
<head>
  <title>Tabla de datos con Bootstrap</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    /* Estilos adicionales */
    .hidden-column {
      display: none;
    }

    .hidden-data .hidden-column {
      display: table-cell;
    }

    th {
      font-weight: bold;
    }

    /* Estilo para el botón pequeño */
    .small-btn {
      padding: 5px 10px;
      font-size: 12px;
    }
  </style>
</head>
<body>
  <div class="container mt-5">
    <h2>Tabla de datos</h2>
    <div class="table-responsive">
      <table class="table table-bordered table-striped">
        <thead>
          <tr>
            <th>Botón</th>
            <th>AEROLINEA</th>
            <th>STA</th>
            <th>PEA</th>
            <th>ETA</th>
            <th>ATA</th>
            <th>N° VUELO</th>
            <th>INI/FIN CABINA</th>
            <th>PRI/ULT MALETA</th>
            <th>CIERRE ADU.</th>
            <th>ETD</th>
            <th>ATD</th>
            <th>STATUS</th>
            <th>COD. DEMORAS</th>
          </tr>
        </thead>
        <tbody id="table-body">
          <!-- El contenido de la tabla se actualizará aquí -->
        </tbody>
      </table>
    </div>
  </div>

  <script>
    // Función para formatear las fechas en el formato deseado (YYYY/MM/DD HH:mm:ss)
    function formatDate(dateString) {
      const date = new Date(dateString);
      if (isNaN(date)) {
        return '';
      }
      const year = date.getFullYear();
      const month = String(date.getMonth() + 1).padStart(2, '0');
      const day = String(date.getDate()).padStart(2, '0');
      const hours = String(date.getHours()).padStart(2, '0');
      const minutes = String(date.getMinutes()).padStart(2, '0');
      const seconds = String(date.getSeconds()).padStart(2, '0');
      return `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;
    }

    var hiddenStates = [];

  function updateTable(data) {
    var tableBody = document.getElementById('table-body');
    tableBody.innerHTML = '';

    data.forEach(function (row, index) {
      var newRow = document.createElement('tr');
      newRow.innerHTML =
        `<td>
          <button class="btn btn-primary rounded-circle small-btn" onclick="toggleData(${index})">
              <i class="fa-solid fa-plane"></i>
          </button>
        </td>
        <td>${row.aer || ''}</td>
        <td>${row.sta ? formatDate(row.sta) : ''}</td>
        <td>${row.pea || ''}</td>
        <td>${row.eta ? formatDate(row.eta) : ''}</td>
        <td>${row.ata ? formatDate(row.ata) : ''}</td>
        <td>${row.v_arr || ''}</td>
        <td>${row.ho_ini && row.ho_fin ? row.ho_ini + ' / ' + row.ho_fin : (row.ho_ini || row.ho_fin || '')}</td>
        <td>${row.pri_bag && row.ul_bag ? row.pri_bag + ' / ' + row.ul_bag : (row.pri_bag || row.ul_bag || '')}</td>
        <td>${row.cie || ''}</td>
        <td>${row.etd ? formatDate(row.etd) : ''}</td>
        <td>${row.atd ? formatDate(row.atd) : ''}</td>
        <td>${row.stat || ''}</td>
        <td>${row.dem || ''}</td>`;

      tableBody.appendChild(newRow);

      // Filas ocultas para los responsables
      var hiddenDataRow = document.createElement('tr');
      hiddenDataRow.className = 'hidden-data';
      hiddenDataRow.style.display = 'none';
      hiddenDataRow.innerHTML =
        `<td></td>
        <td><strong>RESPONSABLE CAB.</strong></td>
        <td colspan="4">${row.res || ''}</td>
        <td><strong>EQUIPO CAB.</strong></td>`;
      tableBody.appendChild(hiddenDataRow);

      hiddenDataRow = document.createElement('tr');
      hiddenDataRow.className = 'hidden-data';
      hiddenDataRow.style.display = 'none';
      hiddenDataRow.innerHTML =
        `<td></td>
        <td><strong>RESPONSABLE ADU.</strong></td>
        <td colspan="4">${row.res_a || ''}</td>
        <td><strong>EQUIPO ADU.</strong></td>`
        ;
      tableBody.appendChild(hiddenDataRow);

      // Inicializar los estados de las filas ocultas como falsos (no mostrados)
      hiddenStates.push(false, false);
    });
  }

  // Función para mostrar u ocultar las filas ocultas relacionadas con un botón
  function toggleData(index) {
    var start = index * 2;
    var end = start + 1;

    for (var i = 0; i < hiddenStates.length; i++) {
      hiddenStates[i] = i >= start && i <= end ? !hiddenStates[i] : false;
      document.querySelectorAll('.hidden-data')[i].style.display = hiddenStates[i] ? 'table-row' : 'none';
    }
  }
  

    function getData() {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', '/data', true);
      xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
          var responseData = JSON.parse(xhr.responseText);
          updateTable(responseData.data);
        }
      };
      xhr.send();
    }

    getData();
    setInterval(getData, 60000);
  </script>
</body>
</html>
